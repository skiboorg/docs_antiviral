# Generated by Django 3.1.4 on 2020-12-14 12:46

import ckeditor_uploader.fields
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название категории')),
                ('name_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, upload_to='images/catalog/categories/', verbose_name='Изображение категории')),
                ('page_h1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тег H1')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title страницы')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание категории')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать ?')),
                ('order_num', models.IntegerField(default=100)),
                ('views', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название товара')),
                ('name_lower', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('name_slug', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('price', models.IntegerField(blank=True, db_index=True, default=0, verbose_name='Цена')),
                ('article', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артикул')),
                ('discount', models.IntegerField(blank=True, db_index=True, default=0, verbose_name='Скидка %')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Тект для вкладки Детали')),
                ('carry', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Тект для вкладки Состав и уход')),
                ('delivery', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Тект для вкладки Срок доставки')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title страницы')),
                ('page_description', models.TextField(blank=True, null=True, verbose_name='Description страницы')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать товар ?')),
                ('is_present', models.BooleanField(db_index=True, default=True, verbose_name='Товар в наличии ?')),
                ('is_new', models.BooleanField(db_index=True, default=False, verbose_name='Товар новинка ?')),
                ('buys', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ItemColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('bg_color', colorfield.fields.ColorField(default='#000000', max_length=18, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='ItemHeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Рост')),
            ],
            options={
                'verbose_name': 'Рост',
                'verbose_name_plural': 'Рост',
            },
        ),
        migrations.CreateModel(
            name='ItemSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название подкатегории')),
                ('name_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, upload_to='images/catalog/categories/', verbose_name='Изображение категории')),
                ('page_h1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тег H1')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title страницы')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание категории')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать ?')),
                ('is_in_index_catalog', models.BooleanField(db_index=True, default=False, verbose_name='Показывать на главной ?')),
                ('order_num', models.IntegerField(default=100)),
                ('views', models.IntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategory', to='shop.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
            },
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.itemcolor', verbose_name='Цвет')),
                ('height', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.itemheight', verbose_name='Рост')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.item', verbose_name='Базовый товар')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.itemsize', verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Вид товара',
                'verbose_name_plural': 'Виды товаров',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.subcategory', verbose_name='Подкатегории'),
        ),
    ]
